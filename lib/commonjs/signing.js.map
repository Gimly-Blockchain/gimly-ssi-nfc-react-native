{"version":3,"names":["Sign","getSuite","cardId","keyId","controller","keyPair","Ed25519VerificationKey2020","from","type","id","suite","Ed25519Signature2020","key","signer","sign","data","dataHash","Array","map","byte","toString","padStart","join","response","TangemSdk","signHashes","signature","date","Date","toISOString","documentLoader","url","startsWith","didResolver","UniResolver","result","resolve","didResolutionMetadata","error","didDocument","Error","framed","frame","contextUrl","documentUrl","document","loader","documentLoaderXhr","apply","jsonld","credential","unsignedCredential","signedCredential","vc","issue","presentation","challenge","signedPresentation","signPresentation","err","message","verifyCredential","signedVC","verifyPresentation","verify"],"sources":["signing.tsx"],"sourcesContent":["// @ts-ignore\nimport 'text-encoding-polyfill';\n// @ts-ignore\nimport vc from '@digitalcredentials/vc';\n// @ts-ignore\nimport { Ed25519VerificationKey2020 } from '@digitalcredentials/ed25519-verification-key-2020';\n// @ts-ignore\nimport { Ed25519Signature2020 } from '@digitalcredentials/ed25519-signature-2020';\n// @ts-ignore\nimport { UniResolver } from '@sphereon/did-uni-client';\n// @ts-ignore\nimport documentLoaderXhr from '@digitalcredentials/jsonld/lib/documentLoaders/xhr';\n// @ts-ignore\nimport { frame } from '@digitalcredentials/jsonld';\n// @ts-ignore\nimport jsonld from '@digitalcredentials/jsonld';\n// @ts-ignore\nimport TangemSdk from 'tangem-sdk';\n// @ts-ignore\nimport type { Credential, Presentation } from './types';\n\nexport default class Sign {\n  /**\n   * Gets the suit required to sign\n   *\n   * @param cardId the card Id\n   * @param keyId the public key\n   * @returns The suit\n   */\n  private static async getSuite(\n    cardId: string,\n    keyId: string,\n    controller?: string\n  ) {\n    const keyPair = await Ed25519VerificationKey2020.from({\n      type: 'Ed25519VerificationKey2020',\n      controller: controller,\n      id: controller + '#controllerKey',\n    });\n\n    const suite = new Ed25519Signature2020({ key: keyPair });\n\n    suite.signer = {\n      async sign({ data }: any) {\n        const dataHash = Array.from(data)\n        // @ts-ignore\n        .map((byte) => byte.toString(16).padStart(2, '0'))\n          .join('');\n        const response = await TangemSdk.signHashes([dataHash], keyId, cardId);\n        // @ts-ignore\n        return response.signature;\n      },\n      id: keyPair.id,\n    };\n\n    suite.date = new Date().toISOString();\n\n    return suite;\n  }\n\n  /**\n   * Gets the document\n   *\n   * @param url the document url\n   * @returns The suit\n   */\n  private static async documentLoader(url: string) {\n    if (url && url.startsWith('did:')) {\n      const didResolver = new UniResolver();\n      const result = await didResolver.resolve(url);\n\n      if (result.didResolutionMetadata.error || !result.didDocument) {\n        throw new Error(`Unable to resolve DID: ${url}`);\n      }\n\n      const framed = await frame(result.didDocument, {\n        '@context': result.didDocument['@context'],\n        '@embed': '@never',\n        'id': url,\n      });\n\n      return {\n        contextUrl: null,\n        documentUrl: url,\n        document: framed,\n      };\n    }\n\n    const loader = documentLoaderXhr.apply(jsonld, []);\n    const response = await loader(url);\n\n    return response;\n  }\n\n  /**\n   * Sign the credential\n   *\n   * @param\n   * @returns The signed credential\n   */\n  public static async credential(\n    unsignedCredential: Credential,\n    keyId: string,\n    cardId: string,\n    controller: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n\n    const signedCredential = await vc.issue({\n      credential: unsignedCredential,\n      suite,\n      documentLoader: this.documentLoader,\n    });\n\n    return signedCredential;\n  }\n\n  /**\n   * Sign the presentation\n   *\n   * @param\n   * @returns The signed presentation\n   */\n  public static async presentation(\n    presentation: Presentation,\n    keyId: string,\n    cardId: string,\n    controller: string,\n    challenge: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n    try {\n      const signedPresentation = await vc.signPresentation({\n        presentation,\n        suite,\n        challenge,\n        documentLoader: this.documentLoader,\n      });\n      return signedPresentation;\n    } catch (err: any) {\n      //TODO improve error handling\n      throw new Error(err.message);\n    }\n  }\n\n  /**\n   * Verify a credential\n   *\n   * Currently in development\n   *\n   * @param signedVC a signed credential\n   * @returns wheter the credential is valid or not\n   */\n  public static async verifyCredential(\n    signedVC: Credential,\n    keyId: string,\n    cardId: string,\n    controller: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n    const result = await vc.verifyCredential({\n      credential: signedVC,\n      suite,\n      documentLoader: this.documentLoader,\n    });\n    return result;\n  }\n\n  /**\n   * Verify a presentation\n   *\n   * Currently in development\n   *\n   * @param signedPresentation a signed presentation\n   * @returns wheter the presentation is valid or not\n   */\n  public static async verifyPresentation(\n    signedPresentation: Presentation,\n    keyId: string,\n    cardId: string,\n    controller: string,\n    challenge: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n    const result = await vc.verify({\n      presentation: signedPresentation,\n      challenge,\n      suite,\n      documentLoader: this.documentLoader,\n    });\n    return result;\n  }\n}\n"],"mappings":"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"}