{"version":3,"names":["vc","Ed25519VerificationKey2020","Ed25519Signature2020","UniResolver","documentLoaderXhr","frame","jsonld","TangemSdk","Sign","getSuite","cardId","keyId","controller","keyPair","from","type","id","publicKeyMultibase","privateKeyMultibase","suite","key","signer","sign","data","console","log","toString","response","signHashes","date","Date","toISOString","documentLoader","url","startsWith","didResolver","result","resolve","didResolutionMetadata","error","didDocument","Error","framed","contextUrl","documentUrl","document","loader","apply","credential","unsignedCredential","signedCredential","issue","presentation","challenge","signedPresentation","signPresentation","err","message","verifyCredential","signedVC","verifyPresentation","verify"],"sources":["signing.tsx"],"sourcesContent":["// @ts-ignore\nimport 'text-encoding-polyfill';\n// @ts-ignore\nimport vc from '@digitalcredentials/vc';\n// @ts-ignore\nimport { Ed25519VerificationKey2020 } from '@digitalcredentials/ed25519-verification-key-2020';\n// @ts-ignore\nimport { Ed25519Signature2020 } from '@digitalcredentials/ed25519-signature-2020';\n// @ts-ignore\nimport { UniResolver } from '@sphereon/did-uni-client';\n// @ts-ignore\nimport documentLoaderXhr from '@digitalcredentials/jsonld/lib/documentLoaders/xhr';\n// @ts-ignore\nimport { frame } from '@digitalcredentials/jsonld';\n// @ts-ignore\nimport jsonld from '@digitalcredentials/jsonld';\n// @ts-ignore\nimport TangemSdk from 'tangem-sdk';\n// @ts-ignore\nimport type { Credential, Presentation } from './types';\n\nexport default class Sign {\n  /**\n   * Gets the suit required to sign\n   *\n   * @param cardId the card Id\n   * @param keyId the public key\n   * @returns The suit\n   */\n  private static async getSuite(\n    cardId: string,\n    keyId: string,\n    controller?: string\n  ) {\n    const keyPair = await Ed25519VerificationKey2020.from({\n      type: 'Ed25519VerificationKey2020',\n      controller: controller,\n      id: controller + '#controllerKey',\n      publicKeyMultibase: 'z6MknCCLeeHBUaHu4aHSVLDCYQW9gjVJ7a63FpMvtuVMy53T',\n      privateKeyMultibase:\n        'zrv2EET2WWZ8T1Jbg4fEH5cQxhbUS22XxdweypUbjWVzv1YD6VqYu' +\n        'W6LH7heQCNYQCuoKaDwvv2qCWz3uBzG2xesqmf',\n    });\n\n    const suite = new Ed25519Signature2020({ key: keyPair });\n\n    suite.signer = {\n      async sign({ data }: any) {\n        console.log('data', data.toString('hex'));\n        const response = await TangemSdk.signHashes([data.toString('hex')], keyId, cardId);\n        console.log('response', response);\n        return data;\n      },\n      id: keyPair.id,\n    };\n\n    suite.date = new Date().toISOString();\n\n    return suite;\n  }\n\n  /**\n   * Gets the document\n   *\n   * @param url the document url\n   * @returns The suit\n   */\n  private static async documentLoader(url: string) {\n    if (url && url.startsWith('did:')) {\n      const didResolver = new UniResolver();\n      const result = await didResolver.resolve(url);\n\n      if (result.didResolutionMetadata.error || !result.didDocument) {\n        throw new Error(`Unable to resolve DID: ${url}`);\n      }\n\n      const framed = await frame(result.didDocument, {\n        '@context': result.didDocument['@context'],\n        '@embed': '@never',\n        'id': url,\n      });\n\n      return {\n        contextUrl: null,\n        documentUrl: url,\n        document: framed,\n      };\n    }\n\n    const loader = documentLoaderXhr.apply(jsonld, []);\n    const response = await loader(url);\n\n    return response;\n  }\n\n  /**\n   * Sign the credential\n   *\n   * @param\n   * @returns The signed credential\n   */\n  public static async credential(\n    unsignedCredential: Credential,\n    keyId: string,\n    cardId: string,\n    controller: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n\n    const signedCredential = await vc.issue({\n      credential: unsignedCredential,\n      suite,\n      documentLoader: this.documentLoader,\n    });\n\n    return signedCredential;\n  }\n\n  /**\n   * Sign the presentation\n   *\n   * @param\n   * @returns The signed presentation\n   */\n  public static async presentation(\n    presentation: Presentation,\n    keyId: string,\n    cardId: string,\n    controller: string,\n    challenge: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n    try {\n      const signedPresentation = await vc.signPresentation({\n        presentation,\n        suite,\n        challenge,\n        documentLoader: this.documentLoader,\n      });\n      return signedPresentation;\n    } catch (err: any) {\n      //TODO improve error handling\n      throw new Error(err.message);\n    }\n  }\n\n  /**\n   * Verify a credential\n   *\n   * Currently in development\n   *\n   * @param signedVC a signed credential\n   * @returns wheter the credential is valid or not\n   */\n  public static async verifyCredential(\n    signedVC: Credential,\n    keyId: string,\n    cardId: string,\n    controller: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n    const result = await vc.verifyCredential({\n      credential: signedVC,\n      suite,\n      documentLoader: this.documentLoader,\n    });\n    return result;\n  }\n\n  /**\n   * Verify a presentation\n   *\n   * Currently in development\n   *\n   * @param signedPresentation a signed presentation\n   * @returns wheter the presentation is valid or not\n   */\n  public static async verifyPresentation(\n    signedPresentation: Presentation,\n    keyId: string,\n    cardId: string,\n    controller: string,\n    challenge: string\n  ): Promise<any> {\n    const suite = await this.getSuite(cardId, keyId, controller);\n    const result = await vc.verify({\n      presentation: signedPresentation,\n      challenge,\n      suite,\n      documentLoader: this.documentLoader,\n    });\n    return result;\n  }\n}\n"],"mappings":"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"}